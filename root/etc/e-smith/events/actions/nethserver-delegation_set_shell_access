#!/usr/bin/perl

use NethServer::SSSD;
use esmith::ConfigDB;
use File::Temp;
use strict;
use Errno;

my $db = esmith::ConfigDB->open_ro('delegations') 
    || esmith::ConfigDB->create('delegations');
my $sssd = new NethServer::SSSD();

my $event = shift;
my $userName = shift;

exit(0) unless defined $userName;

my $shell = $db->get_prop($userName,'sudo') || 'disabled';

if (($sssd->isLdap) && ($shell eq 'enabled')){
    if ($userName =~ /@/) {
        $userName = (split(/@/,$userName))[0];
    }

    system('/usr/sbin/lusermod',
        '--shell=/bin/bash',
        $userName);

    if($? != 0) {
        die("[ERROR] Failed to modify user `$userName` fields!\n");
    }
}
elsif(($sssd->isAD) && ($shell eq 'enabled')){

    #accept user@domain format
    $userName =~ s/@.*//;

    #Create a temporary ldif file (root:root 0600)
    my $fileFullPath = File::Temp->new(
        TEMPLATE => "$userName.XXXXXXXXXX",
        DIR => '/var/lib/machines/nsdc/var/spool/'
    );

    #retrieve the dn from samaccountname
    my $dn = qx(nsdc-run -- /usr/bin/ldbsearch -H /var/lib/samba/private/sam.ldb "samaccountname=$userName" dn | sed -n '/^dn: / { s/\r// ; p ; q }');
    chomp $dn;

    #print the content
    print $fileFullPath qq (
$dn
changetype: modify
replace: loginShell
loginShell: /bin/bash
);

    close($fileFullPath);

    #we need the relative path in the container
    my $fileRelativePath = $fileFullPath; 
    $fileRelativePath =~ s|/var/lib/machines/nsdc||;

    #modif the samba LDAP
    system(qw(nsdc-run -- /usr/bin/ldbmodify -H /var/lib/samba/private/sam.ldb), $fileRelativePath);
    if ($? != 0) {
        die("[ERROR] User $userName shell modification failed\n");
    }
}
